name: Maven CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main


jobs:
  # checkstyle:
  #   name: runner / checkstyle
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out code
  #       uses: actions/checkout@v3
      
  #     - name: Running Checkstyle
  #       uses: dbelyaev/action-checkstyle@v0.7.4
  #       with:
  #         github_token: ${{ secrets.github_token }}
  #         checkstyle_config: google_checks.xml
  #         reporter: github-check
  #         level: error
  #         fail_on_error: false

  maven:
    name: runner / maven build
    runs-on: ubuntu-latest
    needs: checkstyle
    outputs:
        artifactName: ${{ steps.step1.outputs.ARTIFACT_NAME }}
        artifactVersion: ${{ steps.step2.outputs.ARTIFACT_VERSION }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Unit test
        run: mvn test

      - name: Build with maven
        run: mvn clean package

      - name: setEnvVariables
        run: |
          cd target
          echo "ARTIFACT_NAME=$(ls | grep *.jar | cut -d - -f 1-3)" >> $GITHUB_ENV
          echo "ARTIFACT_VERSION=$(ls | grep *.jar | sed 's/.jar/''/' |cut -d - -f 4)" >> $GITHUB_ENV
          echo "ARTIFACT_EXT=$(ls | grep *.jar | cut -d . -f 4)" >> $GITHUB_ENV

      - id: step1    
        run: echo "ARTIFACT_NAME=${{ env.ARTIFACT_NAME }}" >> "$GITHUB_OUTPUT"
      - id: step2    
        run: echo "ARTIFACT_VERSION=${{ env.ARTIFACT_VERSION }}" >> "$GITHUB_OUTPUT"

      - name: Print repository name
        run: echo "${{ github.event.repository.name }}"
        
      # - name: SonarCloud Scan
      #   uses: SonarSource/sonarcloud-github-action@master
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #   with:
      #     projectBaseDir: ${{ github.event.repository.name }}

      - name: Archive maven artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ARTIFACT_NAME}}-${{env.ARTIFACT_VERSION }}
          path: target/${{ env.ARTIFACT_NAME}}-*.${{ env.ARTIFACT_EXT }}
      
  docker:
    runs-on: ubuntu-latest
    needs: maven
    steps:
      - env:
          ARTIFACT_NAME: ${{ needs.maven.outputs.artifactName }}
          ARTIFACT_VERSION: ${{ needs.maven.outputs.artifactVersion }}
        run: |
          echo "ARTIFACT_NAME=$ARTIFACT_NAME" >> $GITHUB_ENV
          echo "ARTIFACT_VERSION=$ARTIFACT_VERSION" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v3

      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.ARTIFACT_NAME}}-${{env.ARTIFACT_VERSION }}
      
      - name: Copy artifact to target
        run: cp ${{ env.ARTIFACT_NAME}}-${{env.ARTIFACT_VERSION }}* target/

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: vistein12/${{ env.ARTIFACT_NAME }}:${{ env.ARTIFACT_VERSION }}
        
    
      
